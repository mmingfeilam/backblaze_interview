/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.example.project;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import org.junit.After;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

public class AppTest {
	static App classUnderTest;

	@BeforeClass
	public static void setUpClass() {
		classUnderTest = new App("K000SswEzGehf0fKzj2ZK+THpxRWzrY", "00035541c4cce760000000001");
	}

	@Before
	public void setUp() throws Exception {
		String directoryName = "test_files";
		File directory = new File(directoryName);
		if (!directory.exists()) {
			directory.mkdir();
		}

	}

	@After
	public void tearDown() throws Exception {
		deleteDir(new File("test_files"));
	}

	public static boolean deleteDir(File dir) {
		if (dir.isDirectory()) {
			String[] children = dir.list();
			for (int i = 0; i < children.length; i++) {
				boolean success = deleteDir(new File(dir, children[i]));
				if (!success) {
					return false;
				}
			}
		}
		return dir.delete();
	}

	@Test
	public void testClearFolder() throws IOException {
		String directoryName = "test_files";

		File fileWithAbsolutePath = new File(directoryName + "/testFile.txt");
		fileWithAbsolutePath.createNewFile();

		assertTrue(fileWithAbsolutePath.exists());

		classUnderTest.clearFolder(directoryName);

		assertFalse(fileWithAbsolutePath.exists());
	}

	@Test
	public void testGetNumberOfOccurrences() throws IOException {
		try {

			String directoryName = "test_files";

			File fileWithAbsolutePath = new File(directoryName + "/testFile.txt");

			FileWriter myWriter = new FileWriter(fileWithAbsolutePath.getPath());
			myWriter.write(
					"A well regulated Militia, being necessary to the security of a free State, the right of the people to keep and bear Arms, shall not be infringed");
			myWriter.close();

			long count = classUnderTest.getNumberOfOccurences(directoryName + "/testFile.txt", 'a');
			assertTrue(count == 8);

		} catch (IOException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
	}

	@Test
	public void testGetNumberOfOccurrencesOfEmptyFile() throws IOException {
		try {

			String directoryName = "test_files";

			File fileWithAbsolutePath = new File(directoryName + "/testFile.txt");

			FileWriter myWriter = new FileWriter(fileWithAbsolutePath.getPath());
			myWriter.close();

			long count = classUnderTest.getNumberOfOccurences(directoryName + "/testFile.txt", 'a');
			assertTrue(count == 0);

		} catch (IOException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
	}

	@Test
	public void testAppCanDownloadFiles() {
		String directoryName = "test_files";

		classUnderTest.downloadFiles(directoryName);

		File f = new File(directoryName);
		File[] files = f.listFiles();
		assertFalse(files.length == 0);
	}

	@Test
	public void testAppCanNotDownloadFilesWithWrongKeyId() {
		String directoryName = "test_files";

		App classUnderTest1 = new App("K000SswEzGehf0fKzj2ZK+THpxRWzrY", "00035541c4cce760000000001a");

		classUnderTest1.downloadFiles(directoryName);

		File f = new File(directoryName);
		File[] files = f.listFiles();
		assertFalse(files.length != 0);
	}

	@Test
	public void testAppCanNotDownloadFilesWithWrongKey() {
		String directoryName = "test_files";

		App classUnderTest1 = new App("K000SswEzGehf0fKzj2ZK+THpxRWzrY1", "00035541c4cce760000000001");

		classUnderTest1.downloadFiles(directoryName);

		File f = new File(directoryName);
		File[] files = f.listFiles();
		assertFalse(files.length != 0);
	}
}
